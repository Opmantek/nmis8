#
## $Id: Model-Default.nmis,v 8.7 2012/11/16 05:46:04 keiths Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System (“NMIS”).
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************
# MLA: Included entTempSensor
# MLA: Included hrProcessorLoad
# MLA: Included entFan and entPowerSupply
# MLA: Included separate broadcast/multicast graphs
#

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'summary' => {
        'common-model' => 'summary'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'event' => {
        'common-model' => 'event'
      },
      'asset' => {
        'common-model' => 'asset'
      },
      'Huawei-Hqos' => {
        'common-model' => 'Huawei-Hqos'
      }
    }
  },
  'alerts' => {
    'entFan' => {
      'entFanState' => {
        'type' => 'test',
        'test' => 'CVAR1=entFanState;$CVAR1 != 1',
        'value' => 'CVAR1=entFanName;"$CVAR1"',
        'unit' => '',
        'element' => 'index',
        'event' => 'FAN Status',
        'level' => 'Warning',
      },
    },
    'entPowerSupply' => {
      'entPowerSupplyState' => {
        'type' => 'test',
        'test' => 'CVAR1=entPowerSupplyState;$CVAR1 != 1',
        'value' => 'CVAR1=entPowerSupplyDescr;"$CVAR1"',
        'unit' => '',
        'element' => 'index',
        'event' => 'PSU Status',
        'level' => 'Warning',
      },
    },
  },
  #'database' => {
  #  'type' => {
  #    'hwMusaBoard' => '/nodes/$node/health/hwMusaBoard-$index.rrd',
  #    'hwGponStats' => '/nodes/$node/interface/hwGponStats-$index.rrd',
  #  }
  #},
  #'heading' => {
  #  'graphtype' => {
  #    'hwCpuMem' => 'Board CPU and Memory Usage',
  #    'hwTempPwr' => 'Board Temperature and Power',
  #    'hwGponStats' => 'GPON OLT Ethernet Statistics'
  #  }
  #},
  #'stats' => {
  #  'type' => {
  #    'hwMusaBoard' => [
  #      'DEF:cpuUtil=$database:BoardCpuRate:AVERAGE',
  #      'DEF:memUtil=$database:BoardRamUseRate:AVERAGE',
  #      'PRINT:cpuUtil:AVERAGE:cpuUtil=%1.2lf',
  #      'PRINT:memUtil:AVERAGE:memUtil=%1.2lf',
  #    ],
  #  },
  #},
  'systemHealth' => {
    'sections' => 'entityMib,Huawei_ProfUserHQoS,hrProcessorLoad,entTempSensor,entFan,entPowerSupply',
    'rrd' => {
      'entTempSensor' => {
	'control' => 'CVAR=entPhysicalClass;$CVAR == 9',
        'graphtype' => 'entTempSensor',
        'indexed' => 'true',
        'snmp' => {
          'entTempSensorValue' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.11',
            'option' => 'gauge,U:U',
            'sysObjectName' => 'entTempSensorValue'
          }
        }
      },
      'hrProcessorLoad' => {
	'control' => 'CVAR=entPhysicalClass;$CVAR == 9',
        'graphtype' => 'hrprocload',
        'indexed' => 'true',
        'snmp' => {
          'hrProcessorLoad' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.5',
            'option' => 'gauge,U:U',
            'sysObjectName' => 'hrProcessorLoad'
          }
        }
      },
    },
    'sys' => {
      'hrProcessorLoad' => {
        'headers' => 'entProcessorName,hrProcessorLoad',
        'index_oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
	'index_regex' => '\.(\d+)$',
        'indexed' => 'true',
        'snmp' => {
          'hrProcessorLoad' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.5',
            'sysObjectName' => 'hrProcessorLoad'
          },
          'entPhysicalClass' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.5',
            'sysObjectName' => 'entPhysicalClass'
          },
          'entProcessorName' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
            'sysObjectName' => 'entProcessorName'
          }
        }
      },
      'entTempSensor' => {
        'headers' => 'entTempSensorName,entPhysicalClass,entTempSensorValue',
        'index_oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
	'index_regex' => '\.(\d+)$',
        'indexed' => 'true',
        'snmp' => {
          'entTempSensorValue' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.11',
            'sysObjectName' => 'entTempSensorValue'
          },
          'entPhysicalClass' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.5',
            'sysObjectName' => 'entPhysicalClass'
          },
          'entTempSensorName' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
            'sysObjectName' => 'entTempSensorName'
          }
        }
      },
      'entFan' => {
        'headers' => 'entFanName,entFanState',
        'index_oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.7',
	'index_regex' => '\.(\d+\.\d+)$',
        'indexed' => 'true',
        'snmp' => {
          'entFanState' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.7',
            'sysObjectName' => 'entFanState'
          },
          'entFanName' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.8',
            'sysObjectName' => 'entFanName'
          }
        }
      },
      'entPowerSupply' => {
        'headers' => 'entPowerSupplyName,entPowerSupplyState',
        'index_oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.9',
	'index_regex' => '\.(\d+\.\d+)$',
        'indexed' => 'true',
        'snmp' => {
          'entPowerSupplyState' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.6',
            'sysObjectName' => 'entPowerSupplyState'
          },
          'entPowerSupplyName' => {
            'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.9',
            'sysObjectName' => 'entPowerSupplyName'
          }
        }
      },
    }
  },
  'system' => {
    'nodegraph' => 'health,response,ip,routenumber',
    'nodeModel' => 'Huawei-NetEngine',
    'nodeType' => 'generic',
    'sys' => {
      #'extra' => {
      #  'snmp' => {
      #    'hwCurrentTemp' => {
      #      'oid' => '1.3.6.1.4.1.2011.6.1.1.5.1.7.0',
      #      'snmpObject' => 'hwCurrentTemp',
      #      'title' => 'Current Temp'
      #    },
      #  }
      #},
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'ifNumber' => {
            'oid' => 'ifNumber',
            'title' => 'Interfaces'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          },
          'sysName' => {
            'oid' => 'sysName'
          }
          
        }
      }
    },
    'rrd' => {
      'nodehealth' => {
        'threshold' => '',
        'graphtype' => 'routenumber',
        'snmp' => {
          #'hwEntityMemSize' => {
          #  'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.9.9'
          #},
          #'hwEntityMemUsed' => {
          #  'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.37.9'
          #},
          #'hwEntityCpuUsage' => {
          #  'oid' => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.5.9'
          #},
	        'RouteNumber' => {
	          'oid' => 'ipCidrRouteNumber'
	        }
        },
      },
      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      }
    }
  },
  'interface' => {
    'sys' => {
      'standard' => {
        'indexed' => 'true',
        'snmp' => {
			    #
          'ifIndex' => {
            'oid' => 'ifIndex',
            'title' => 'ifIndex',
            'calculate' => '$r = unpack("I", pack("i", $r))'
          },
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'title' => 'Oper Status'
          },
          'ifDescr' => {
            'oid' => 'ifName',
            'title' => 'Name (ifName)'
          },
					'ifPhysAddress' => {
            'oid' => 'ifPhysAddress',
            'title' => 'Physical Address',
          },

          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'Bandwidth'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type (ifType)'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          }
        }
      },
      'extra' => {
        'indexed' => 'true',
        'snmp' => {
  				'ifHighSpeed' => {
  					'oid' => 'ifHighSpeed'
  				},
  				'Description' => {
            'oid' => 'ifAlias',
            'title' => 'Description'
          }
        }
      }
    },
    'rrd' => {
      'interface' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'oid' => 'ifName'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }            
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }            
          }
        },
        'threshold' => 'util_in,util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      },
  		'pkts_hc' => {
  			'indexed' => 'true',
        'threshold' => 'pkt_errors_in,pkt_errors_out',
        'graphtype' => 'pkts_hc,errpkts_hc,broadcast,multicast',
  			'snmp' => {
  				'ifHCInOctets' => {
  					'oid' => 'ifHCInOctets',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }            
  				},
  				'ifHCInUcastPkts' => {
  					'oid' => 'ifHCInUcastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifHCInMcastPkts' => {
  					'oid' => 'ifHCInMulticastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifHCInBcastPkts' => {
  					'oid' => 'ifHCInBroadcastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifInDiscards' => {
  					'oid' => 'ifInDiscards',
  					'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
  				},
  				'ifInErrors' => {
  					'oid' => 'ifInErrors',
  					'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
  				},
  				'ifHCOutOctets' => {
  					'oid' => 'ifHCOutOctets',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifHCOutUcastPkts' => {
  					'oid' => 'ifHCOutUcastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifHCOutMcastPkts' => {
  					'oid' => 'ifHCOutMulticastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifHCOutBcastPkts' => {
  					'oid' => 'ifHCOutBroadcastPkts',
  					'option' => 'counter,0:U',
            'replace' => {
              '18446744073709551615' => '0',
            }
  				},
  				'ifOutDiscards' => {
  					'oid' => 'ifOutDiscards',
  					'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
  				},
  				'ifOutErrors' => {
  					'oid' => 'ifOutErrors',
  					'option' => 'counter,0:U',
            'replace' => {
              '4294967295' => '0',
            }
  				},
  			}
  		}
    },
    'collect' => {
      'Description' => '(CNOC|Collection)',
    },
    'nocollect' => {
      'ifOperStatus' => 'other|notPresent',
      'ifDescr' => 'NOMATCH',
      'Description' => '^#',
      'noDescription' => 'false',
      'ifType' => 'gpon|softwareLoopback|l3ipvlan|other'
    },
    'noevent' => {
      'Description' => '^!',
      'ifDescr' => 'null',
      'ifType' => 'other'
    }
  }
);
